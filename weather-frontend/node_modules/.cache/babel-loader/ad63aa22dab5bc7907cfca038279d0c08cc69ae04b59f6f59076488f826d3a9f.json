{"ast":null,"code":"import gql from 'graphql-tag';\nimport { useQuery } from '@vue/apollo-composable';\nexport default {\n  name: 'WeatherCard',\n  data() {\n    return {\n      city: 'Los Angeles',\n      weather: null\n    };\n  },\n  setup() {\n    const city = 'Los Angeles';\n    const {\n      result\n    } = useQuery(gql`\n      query($city: String!) {\n        getWeather(city: $city) {\n          description\n          temperature\n          feels_like\n          sunset\n          icon\n        }\n      }\n    `, {\n      city\n    });\n    return {\n      city,\n      weather: result\n    };\n  }\n};","map":{"version":3,"names":["gql","useQuery","name","data","city","weather","setup","result"],"sources":["C:\\Users\\Admin\\task\\weather-frontend\\src\\components\\WeatherCard.vue"],"sourcesContent":["<template>\n  <div class=\"text-center p-4\">\n    <div class=\"bg-blue-500 p-4 rounded-lg text-white\">\n      <div class=\"text-6xl font-bold\">{{ weather.temperature }}°C</div>\n      <div class=\"text-xl\">{{ weather.description }}</div>\n      <img :src=\"`http://openweathermap.org/img/wn/${weather.icon}@2x.png`\" alt=\"Weather Icon\" class=\"mx-auto\" />\n      <div class=\"text-sm\">{{ city }}</div>\n      <div class=\"text-sm\">{{ new Date().toLocaleDateString() }}</div>\n      <div class=\"text-sm\">Feels like {{ weather.feels_like }}°C</div>\n      <div class=\"text-sm\">Sunset {{ new Date(weather.sunset * 1000).toLocaleTimeString() }}</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport gql from 'graphql-tag';\nimport { useQuery } from '@vue/apollo-composable';\n\nexport default {\n  name: 'WeatherCard',\n  data() {\n    return {\n      city: 'Los Angeles',\n      weather: null,\n    };\n  },\n  setup() {\n    const city = 'Los Angeles';\n    const { result } = useQuery(gql`\n      query($city: String!) {\n        getWeather(city: $city) {\n          description\n          temperature\n          feels_like\n          sunset\n          icon\n        }\n      }\n    `, { city });\n    return {\n      city,\n      weather: result,\n    };\n  },\n};\n</script>\n\n<style scoped>\n/* Add any scoped styles here */\n</style>\n"],"mappings":"AAeA,OAAOA,GAAE,MAAO,aAAa;AAC7B,SAASC,QAAO,QAAS,wBAAwB;AAEjD,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,aAAa;MACnBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,KAAKA,CAAA,EAAG;IACN,MAAMF,IAAG,GAAI,aAAa;IAC1B,MAAM;MAAEG;IAAO,IAAIN,QAAQ,CAACD,GAAG;;;;;;;;;;KAU9B,EAAE;MAAEI;IAAK,CAAC,CAAC;IACZ,OAAO;MACLA,IAAI;MACJC,OAAO,EAAEE;IACX,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}