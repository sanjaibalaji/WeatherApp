{"ast":null,"code":"import gql from 'graphql-tag';\nexport default {\n  name: 'HistoricalWeatherTable',\n  data() {\n    return {\n      location: 'Delhi',\n      fromDate: '',\n      toDate: '',\n      historicalWeather: []\n    };\n  },\n  methods: {\n    async getHistoricalWeather() {\n      if (!this.fromDate || !this.toDate || new Date(this.toDate) - new Date(this.fromDate) > 30 * 24 * 60 * 60 * 1000) {\n        alert('Please select a valid date range within 30 days.');\n        return;\n      }\n      const response = await this.$apollo.query({\n        query: gql`\n          query($city: String!, $from: String!, $to: String!) {\n            getHistoricalWeather(city: $city, from: $from, to: $to) {\n              date\n              temperature\n              description\n              feels_like\n              sunset\n            }\n          }\n        `,\n        variables: {\n          city: this.location,\n          from: this.fromDate,\n          to: this.toDate\n        }\n      });\n      this.historicalWeather = response.data.getHistoricalWeather;\n    }\n  }\n};","map":{"version":3,"names":["gql","name","data","location","fromDate","toDate","historicalWeather","methods","getHistoricalWeather","Date","alert","response","$apollo","query","variables","city","from","to"],"sources":["C:\\Users\\Admin\\task\\weather-frontend\\src\\components\\HistoricalWeatherTable.vue"],"sourcesContent":["<script>\r\nimport gql from 'graphql-tag';\r\n\r\nexport default {\r\n  name: 'HistoricalWeatherTable',\r\n  data() {\r\n    return {\r\n      location: 'Delhi',\r\n      fromDate: '',\r\n      toDate: '',\r\n      historicalWeather: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async getHistoricalWeather() {\r\n      if (!this.fromDate || !this.toDate || new Date(this.toDate) - new Date(this.fromDate) > 30 * 24 * 60 * 60 * 1000) {\r\n        alert('Please select a valid date range within 30 days.');\r\n        return;\r\n      }\r\n\r\n      const response = await this.$apollo.query({\r\n        query: gql`\r\n          query($city: String!, $from: String!, $to: String!) {\r\n            getHistoricalWeather(city: $city, from: $from, to: $to) {\r\n              date\r\n              temperature\r\n              description\r\n              feels_like\r\n              sunset\r\n            }\r\n          }\r\n        `,\r\n        variables: { city: this.location, from: this.fromDate, to: this.toDate },\r\n      });\r\n\r\n      this.historicalWeather = response.data.getHistoricalWeather;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AACA,OAAOA,GAAE,MAAO,aAAa;AAE7B,eAAe;EACbC,IAAI,EAAE,wBAAwB;EAC9BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,OAAO;MACjBC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,iBAAiB,EAAE;IACrB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,oBAAoBA,CAAA,EAAG;MAC3B,IAAI,CAAC,IAAI,CAACJ,QAAO,IAAK,CAAC,IAAI,CAACC,MAAK,IAAK,IAAII,IAAI,CAAC,IAAI,CAACJ,MAAM,IAAI,IAAII,IAAI,CAAC,IAAI,CAACL,QAAQ,IAAI,EAAC,GAAI,EAAC,GAAI,EAAC,GAAI,EAAC,GAAI,IAAI,EAAE;QAChHM,KAAK,CAAC,kDAAkD,CAAC;QACzD;MACF;MAEA,MAAMC,QAAO,GAAI,MAAM,IAAI,CAACC,OAAO,CAACC,KAAK,CAAC;QACxCA,KAAK,EAAEb,GAAG;;;;;;;;;;SAUT;QACDc,SAAS,EAAE;UAAEC,IAAI,EAAE,IAAI,CAACZ,QAAQ;UAAEa,IAAI,EAAE,IAAI,CAACZ,QAAQ;UAAEa,EAAE,EAAE,IAAI,CAACZ;QAAO;MACzE,CAAC,CAAC;MAEF,IAAI,CAACC,iBAAgB,GAAIK,QAAQ,CAACT,IAAI,CAACM,oBAAoB;IAC7D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}