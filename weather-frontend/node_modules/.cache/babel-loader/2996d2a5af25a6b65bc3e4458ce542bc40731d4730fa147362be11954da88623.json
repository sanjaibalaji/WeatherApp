{"ast":null,"code":"// import { createApp } from 'vue';\n// import App from './App.vue';\n// import { ApolloClient, InMemoryCache } from '@apollo/client/core';\n// import { createHttpLink } from 'apollo-link-http';\n// import { provideApolloClient } from '@vue/apollo-composable';\n// import './index.css';\n\n// // HTTP connection to the API\n// const httpLink = createHttpLink({\n//   uri: 'http://localhost:4000/graphql',\n// });\n\n// // Cache implementation\n// const cache = new InMemoryCache();\n\n// // Create the apollo client\n// const apolloClient = new ApolloClient({\n//   link: httpLink,\n//   cache,\n// });\n\n// provideApolloClient(apolloClient);\n\n// createApp(App).mount('#app');\n\nimport { createApp, provide, h } from 'vue';\nimport App from './App.vue';\nimport { ApolloClient, InMemoryCache } from '@apollo/client/core';\nimport { createHttpLink } from 'apollo-link-http';\nimport { DefaultApolloClient } from '@vue/apollo-composable';\nimport './index.css';\n\n// HTTP connection to the API\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000/graphql'\n});\n\n// Cache implementation\nconst cache = new InMemoryCache();\n\n// Create the Apollo Client\nconst apolloClient = new ApolloClient({\n  link: httpLink,\n  cache\n});\nconst app = createApp({\n  setup() {\n    provide(DefaultApolloClient, apolloClient);\n  },\n  render: () => h(App)\n});\napp.mount('#app');","map":{"version":3,"names":["createApp","provide","h","App","ApolloClient","InMemoryCache","createHttpLink","DefaultApolloClient","httpLink","uri","cache","apolloClient","link","app","setup","render","mount"],"sources":["C:/Users/Admin/task/weather-frontend/src/main.js"],"sourcesContent":["// import { createApp } from 'vue';\n// import App from './App.vue';\n// import { ApolloClient, InMemoryCache } from '@apollo/client/core';\n// import { createHttpLink } from 'apollo-link-http';\n// import { provideApolloClient } from '@vue/apollo-composable';\n// import './index.css';\n\n// // HTTP connection to the API\n// const httpLink = createHttpLink({\n//   uri: 'http://localhost:4000/graphql',\n// });\n\n// // Cache implementation\n// const cache = new InMemoryCache();\n\n// // Create the apollo client\n// const apolloClient = new ApolloClient({\n//   link: httpLink,\n//   cache,\n// });\n\n// provideApolloClient(apolloClient);\n\n// createApp(App).mount('#app');\n\nimport { createApp, provide, h } from 'vue';\nimport App from './App.vue';\nimport { ApolloClient, InMemoryCache } from '@apollo/client/core';\nimport { createHttpLink } from 'apollo-link-http';\nimport { DefaultApolloClient } from '@vue/apollo-composable';\nimport './index.css';\n\n// HTTP connection to the API\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000/graphql',\n});\n\n// Cache implementation\nconst cache = new InMemoryCache();\n\n// Create the Apollo Client\nconst apolloClient = new ApolloClient({\n  link: httpLink,\n  cache,\n});\n\nconst app = createApp({\n  setup() {\n    provide(DefaultApolloClient, apolloClient);\n  },\n  render: () => h(App),\n});\n\napp.mount('#app');\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,SAASA,SAAS,EAAEC,OAAO,EAAEC,CAAC,QAAQ,KAAK;AAC3C,OAAOC,GAAG,MAAM,WAAW;AAC3B,SAASC,YAAY,EAAEC,aAAa,QAAQ,qBAAqB;AACjE,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,mBAAmB,QAAQ,wBAAwB;AAC5D,OAAO,aAAa;;AAEpB;AACA,MAAMC,QAAQ,GAAGF,cAAc,CAAC;EAC9BG,GAAG,EAAE;AACP,CAAC,CAAC;;AAEF;AACA,MAAMC,KAAK,GAAG,IAAIL,aAAa,CAAC,CAAC;;AAEjC;AACA,MAAMM,YAAY,GAAG,IAAIP,YAAY,CAAC;EACpCQ,IAAI,EAAEJ,QAAQ;EACdE;AACF,CAAC,CAAC;AAEF,MAAMG,GAAG,GAAGb,SAAS,CAAC;EACpBc,KAAKA,CAAA,EAAG;IACNb,OAAO,CAACM,mBAAmB,EAAEI,YAAY,CAAC;EAC5C,CAAC;EACDI,MAAM,EAAEA,CAAA,KAAMb,CAAC,CAACC,GAAG;AACrB,CAAC,CAAC;AAEFU,GAAG,CAACG,KAAK,CAAC,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}