{"ast":null,"code":"export default {\n  name: 'HourlyForecast',\n  props: ['hourlyForecast'],\n  computed: {\n    cardClass() {\n      if (!this.hourlyForecast || this.hourlyForecast.length === 0) return 'bg-white bg-opacity-25 backdrop-blur-sm';\n      const temp = this.hourlyForecast[0].temp;\n      if (temp < 0) return 'bg-blue-700 text-white bg-opacity-70 backdrop-blur-sm';\n      if (temp < 10) return 'bg-blue-500 text-white bg-opacity-70 backdrop-blur-sm';\n      if (temp < 20) return 'bg-green-500 text-white bg-opacity-70 backdrop-blur-sm';\n      if (temp < 30) return 'bg-yellow-500 text-black bg-opacity-70 backdrop-blur-sm';\n      return 'bg-red-500 text-white bg-opacity-70 backdrop-blur-sm';\n    },\n    textClass() {\n      if (!this.hourlyForecast || this.hourlyForecast.length === 0) return 'text-gray-900';\n      const temp = this.hourlyForecast[0].temp;\n      if (temp < 30) return 'text-white';\n      return 'text-black';\n    }\n  },\n  methods: {\n    formatTime(timestamp) {\n      const date = new Date(timestamp * 1000);\n      const hours = date.getHours();\n      const suffix = hours >= 12 ? 'PM' : 'AM';\n      const formattedHours = hours % 12 || 12;\n      return `${formattedHours} ${suffix}`;\n    }\n  }\n};","map":{"version":3,"names":["name","props","computed","cardClass","hourlyForecast","length","temp","textClass","methods","formatTime","timestamp","date","Date","hours","getHours","suffix","formattedHours"],"sources":["C:\\Users\\Admin\\task\\weather-frontend\\src\\components\\HourlyForecast.vue"],"sourcesContent":["<!-- <template>\r\n    <div class=\"mt-4\">\r\n      <div class=\"text-sm text-gray-600 flex justify-between\">\r\n        <div>Now</div>\r\n        <div v-for=\"hour in hourlyForecast\" :key=\"hour.dt\">\r\n          {{ new Date(hour.dt * 1000).getHours() }}:00\r\n        </div>\r\n      </div>\r\n      <div class=\"text-lg font-bold flex justify-between\">\r\n        <div v-for=\"hour in hourlyForecast\" :key=\"hour.dt\">\r\n          <img :src=\"`http://openweathermap.org/img/wn/${hour.icon}@2x.png`\" alt=\"Weather Icon\" class=\"w-8 h-8\" />\r\n          <div>{{ hour.temp }}°C</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'HourlyForecast',\r\n    props: ['hourlyForecast'],\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add any scoped styles here */\r\n  </style>\r\n   -->\r\n\r\n   <!-- <template>\r\n    <div class=\"mt-4\">\r\n      <div class=\"text-sm text-gray-600 flex justify-between\">\r\n        <div>Now</div>\r\n        <div v-for=\"hour in hourlyForecast\" :key=\"hour.dt\">\r\n          {{ new Date(hour.dt * 1000).getHours() }}:00\r\n        </div>\r\n      </div>\r\n      <div class=\"text-lg font-bold flex justify-between\">\r\n        <div v-for=\"hour in hourlyForecast\" :key=\"hour.dt\">\r\n          <img :src=\"`http://openweathermap.org/img/wn/${hour.icon}@2x.png`\" alt=\"Weather Icon\" class=\"w-8 h-8\" />\r\n          <div>{{ hour.temp }}°C</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'HourlyForecast',\r\n    props: ['hourlyForecast'],\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add any scoped styles here */\r\n  </style>\r\n   -->\r\n<!-- working fine below code  -->\r\n   <!-- <template>\r\n    <div class=\"mt-4\">\r\n      <div class=\"text-sm text-gray-600 flex justify-between\">\r\n        <div>Now</div>\r\n        <div v-for=\"hour in hourlyForecast\" :key=\"hour.dt\">\r\n          {{ new Date(hour.dt * 1000).getHours() }}:00\r\n        </div>\r\n      </div>\r\n      <div class=\"text-lg font-bold flex justify-between\">\r\n        <div v-for=\"hour in hourlyForecast\" :key=\"hour.dt\">\r\n          <img :src=\"`http://openweathermap.org/img/wn/${hour.icon}@2x.png`\" alt=\"Weather Icon\" class=\"w-8 h-8\" />\r\n          <div>{{ hour.temp.toFixed(1) }}°C</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'HourlyForecast',\r\n    props: ['hourlyForecast'],\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add any scoped styles here */\r\n  </style>\r\n   -->\r\n<!-- correctly working code below -->\r\n   <!-- <template>\r\n    <div class=\"mt-4 w-full\">\r\n      <div class=\"text-sm text-gray-600 flex justify-around\">\r\n        <div v-for=\"hour in hourlyForecast.slice(0, 10)\" :key=\"hour.dt\" class=\"text-center\">\r\n          <div>{{ formatTime(hour.dt) }}</div>\r\n          <img :src=\"`http://openweathermap.org/img/wn/${hour.icon}@2x.png`\" alt=\"Weather Icon\" class=\"w-12 h-12 mx-auto\" />\r\n          <div class=\"font-bold\">{{ hour.temp.toFixed(1) }}°C</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'HourlyForecast',\r\n    props: ['hourlyForecast'],\r\n    methods: {\r\n      formatTime(timestamp) {\r\n        const date = new Date(timestamp * 1000);\r\n        const hours = date.getHours();\r\n        const suffix = hours >= 12 ? 'PM' : 'AM';\r\n        const formattedHours = hours % 12 || 12; // Convert 24-hour time to 12-hour time\r\n        return `${formattedHours} ${suffix}`;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add any scoped styles here */\r\n  </style>\r\n   -->\r\n\r\n\r\n   <!-- <template>\r\n    <div class=\"mt-4 w-full\">\r\n      <div class=\"flex flex-wrap justify-around\">\r\n        <div v-for=\"hour in hourlyForecast.slice(0, 10)\" :key=\"hour.dt\" class=\"text-center w-1/5 p-2\">\r\n          <div>{{ formatTime(hour.dt) }}</div>\r\n          <img :src=\"`http://openweathermap.org/img/wn/${hour.icon}@2x.png`\" alt=\"Weather Icon\" class=\"w-12 h-12 mx-auto\" />\r\n          <div class=\"font-bold\">{{ hour.temp.toFixed(1) }}°C</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'HourlyForecast',\r\n    props: ['hourlyForecast'],\r\n    methods: {\r\n      formatTime(timestamp) {\r\n        const date = new Date(timestamp * 1000);\r\n        const hours = date.getHours();\r\n        const suffix = hours >= 12 ? 'PM' : 'AM';\r\n        const formattedHours = hours % 12 || 12; // Convert 24-hour time to 12-hour time\r\n        return `${formattedHours} ${suffix}`;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add any scoped styles here */\r\n  </style>\r\n   -->  \r\n  <!-- correctly working code above -->\r\n\r\n  <!-- <template>\r\n    <div class=\"mt-4 w-full\">\r\n      <div class=\"bg-blue-500 p-4 rounded-lg text-white\">\r\n        <div class=\"flex flex-wrap justify-around\">\r\n          <div v-for=\"hour in hourlyForecast.slice(0, 10)\" :key=\"hour.dt\" class=\"text-center w-1/5 p-2\">\r\n            <div>{{ formatTime(hour.dt) }}</div>\r\n            <img :src=\"`http://openweathermap.org/img/wn/${hour.icon}@2x.png`\" alt=\"Weather Icon\" class=\"w-12 h-12 mx-auto\" />\r\n            <div class=\"font-bold\">{{ hour.temp.toFixed(1) }}°C</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'HourlyForecast',\r\n    props: ['hourlyForecast'],\r\n    methods: {\r\n      formatTime(timestamp) {\r\n        const date = new Date(timestamp * 1000);\r\n        const hours = date.getHours();\r\n        const suffix = hours >= 12 ? 'PM' : 'AM';\r\n        const formattedHours = hours % 12 || 12; // Convert 24-hour time to 12-hour time\r\n        return `${formattedHours} ${suffix}`;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add any scoped styles here */\r\n  </style>\r\n   -->\r\n\r\n   <!-- with single card layout working fine above code -->\r\n   <template>\r\n    <div class=\"mt-4 w-full\">\r\n      <div :class=\"cardClass\" class=\"p-4 rounded-lg\">\r\n        <div class=\"flex flex-wrap justify-around\">\r\n          <!-- First Row -->\r\n          <div v-for=\"hour in hourlyForecast.slice(0, 5)\" :key=\"hour.dt\" class=\"text-center w-1/5 p-2\">\r\n            <div>{{ formatTime(hour.dt) }}</div>\r\n            <img :src=\"`http://openweathermap.org/img/wn/${hour.icon}@2x.png`\" alt=\"Weather Icon\" class=\"w-12 h-12 mx-auto\" />\r\n            <div class=\"font-bold\">{{ hour.temp.toFixed(1) }}°C</div>\r\n          </div>\r\n        </div>\r\n        <!-- Horizontal Line -->\r\n        <div class=\"w-full flex justify-center my-2\">\r\n          <hr class=\"border-gray-200 w-11/12\">\r\n        </div>\r\n        <div class=\"flex flex-wrap justify-around\">\r\n          <!-- Second Row -->\r\n          <div v-for=\"hour in hourlyForecast.slice(5, 10)\" :key=\"hour.dt\" class=\"text-center w-1/5 p-2\">\r\n            <div>{{ formatTime(hour.dt) }}</div>\r\n            <img :src=\"`http://openweathermap.org/img/wn/${hour.icon}@2x.png`\" alt=\"Weather Icon\" class=\"w-12 h-12 mx-auto\" />\r\n            <div class=\"font-bold\">{{ hour.temp.toFixed(1) }}°C</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script> \r\n  export default { \r\n    name: 'HourlyForecast', \r\n    props: ['hourlyForecast'],\r\n    computed: { cardClass() {\r\n       if (!this.hourlyForecast || this.hourlyForecast.length === 0) return 'bg-white bg-opacity-25 backdrop-blur-sm'; \r\n       const temp = this.hourlyForecast[0].temp; \r\n       if (temp < 0) return 'bg-blue-700 text-white bg-opacity-70 backdrop-blur-sm'; \r\n       if (temp < 10) return 'bg-blue-500 text-white bg-opacity-70 backdrop-blur-sm'; \r\n       if (temp < 20) return 'bg-green-500 text-white bg-opacity-70 backdrop-blur-sm'; \r\n       if (temp < 30) return 'bg-yellow-500 text-black bg-opacity-70 backdrop-blur-sm';\r\n        return 'bg-red-500 text-white bg-opacity-70 backdrop-blur-sm'; },\r\n         textClass() {\r\n           if (!this.hourlyForecast || this.hourlyForecast.length === 0) return 'text-gray-900'; \r\n           const temp = this.hourlyForecast[0].temp; if (temp < 30) return 'text-white'; return 'text-black';\r\n           }, \r\n          }, \r\n           methods:\r\n            { \r\n              formatTime(timestamp) { \r\n              const date = new Date(timestamp * 1000); \r\n              const hours = date.getHours();\r\n              const suffix = hours >= 12 ? 'PM' : 'AM'; \r\n              const formattedHours = hours % 12 || 12; \r\n              return `${formattedHours} ${suffix}`; \r\n              },\r\n              },\r\n            }; \r\n</script>\r\n  \r\n  <style scoped>\r\n  /* Add any scoped styles here */\r\n  </style>\r\n  "],"mappings":"AA2NE,eAAe;EACbA,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE,CAAC,gBAAgB,CAAC;EACzBC,QAAQ,EAAE;IAAEC,SAASA,CAAA,EAAG;MACrB,IAAI,CAAC,IAAI,CAACC,cAAa,IAAK,IAAI,CAACA,cAAc,CAACC,MAAK,KAAM,CAAC,EAAE,OAAO,yCAAyC;MAC9G,MAAMC,IAAG,GAAI,IAAI,CAACF,cAAc,CAAC,CAAC,CAAC,CAACE,IAAI;MACxC,IAAIA,IAAG,GAAI,CAAC,EAAE,OAAO,uDAAuD;MAC5E,IAAIA,IAAG,GAAI,EAAE,EAAE,OAAO,uDAAuD;MAC7E,IAAIA,IAAG,GAAI,EAAE,EAAE,OAAO,wDAAwD;MAC9E,IAAIA,IAAG,GAAI,EAAE,EAAE,OAAO,yDAAyD;MAC9E,OAAO,sDAAsD;IAAE,CAAC;IAC/DC,SAASA,CAAA,EAAG;MACV,IAAI,CAAC,IAAI,CAACH,cAAa,IAAK,IAAI,CAACA,cAAc,CAACC,MAAK,KAAM,CAAC,EAAE,OAAO,eAAe;MACpF,MAAMC,IAAG,GAAI,IAAI,CAACF,cAAc,CAAC,CAAC,CAAC,CAACE,IAAI;MAAE,IAAIA,IAAG,GAAI,EAAE,EAAE,OAAO,YAAY;MAAE,OAAO,YAAY;IACjG;EACD,CAAC;EACAE,OAAO,EACN;IACEC,UAAUA,CAACC,SAAS,EAAE;MACtB,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,SAAQ,GAAI,IAAI,CAAC;MACvC,MAAMG,KAAI,GAAIF,IAAI,CAACG,QAAQ,CAAC,CAAC;MAC7B,MAAMC,MAAK,GAAIF,KAAI,IAAK,EAAC,GAAI,IAAG,GAAI,IAAI;MACxC,MAAMG,cAAa,GAAIH,KAAI,GAAI,EAAC,IAAK,EAAE;MACvC,OAAO,GAAGG,cAAc,IAAID,MAAM,EAAE;IACpC;EACA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}