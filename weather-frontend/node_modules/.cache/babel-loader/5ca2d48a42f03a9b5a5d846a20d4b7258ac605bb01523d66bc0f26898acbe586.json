{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  name: 'HomePage',\n  setup() {\n    const city = ref('');\n    const isPopupVisible = ref(false);\n    const errorMessage = ref('');\n    const router = useRouter();\n    const validateCity = async () => {\n      try {\n        const response = await axios.post('http://localhost:3000/graphql', {\n          query: `\n            query ValidateCity($city: String!) {\n              validateCity(city: $city) {\n                valid\n                message\n              }\n            }\n          `,\n          variables: {\n            city: city.value\n          }\n        });\n        if (response.data.data.validateCity.valid) {\n          router.push({\n            name: 'WeatherResults',\n            params: {\n              city: city.value\n            }\n          });\n        } else {\n          errorMessage.value = response.data.data.validateCity.message;\n          isPopupVisible.value = true;\n        }\n      } catch (error) {\n        errorMessage.value = error.response?.data?.message || 'An error occurred';\n        isPopupVisible.value = true;\n      }\n    };\n    return {\n      city,\n      validateCity,\n      isPopupVisible,\n      errorMessage\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","axios","name","setup","city","isPopupVisible","errorMessage","router","validateCity","response","post","query","variables","value","data","valid","push","params","message","error"],"sources":["C:\\Users\\Admin\\Documents\\weather\\weather-frontend\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen flex flex-col items-center justify-center bg-gray-100\">\r\n    <h1 class=\"text-2xl mb-4\">Weather App</h1>\r\n    <form @submit.prevent=\"validateCity\" class=\"flex flex-col items-center mb-8\">\r\n      <input v-model=\"city\" type=\"text\" placeholder=\"Enter city\" class=\"p-2 border rounded mb-4\" />\r\n      <button type=\"submit\" class=\"bg-blue-500 text-white p-2 rounded\">Search</button>\r\n    </form>\r\n    <!-- Modal Popup for Invalid City -->\r\n    <div v-if=\"isPopupVisible\" class=\"fixed inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50\">\r\n      <div class=\"bg-white p-6 rounded-lg shadow-lg max-w-sm text-center\">\r\n        <p class=\"text-lg mb-4\">{{ errorMessage }}</p>\r\n        <button @click=\"isPopupVisible = false\" class=\"bg-blue-500 text-white p-2 rounded\">Close</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'HomePage',\r\n  setup() {\r\n    const city = ref('');\r\n    const isPopupVisible = ref(false);\r\n    const errorMessage = ref('');\r\n    const router = useRouter();\r\n\r\n    const validateCity = async () => {\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/graphql', {\r\n          query: `\r\n            query ValidateCity($city: String!) {\r\n              validateCity(city: $city) {\r\n                valid\r\n                message\r\n              }\r\n            }\r\n          `,\r\n          variables: {\r\n            city: city.value,\r\n          },\r\n        });\r\n        if (response.data.data.validateCity.valid) {\r\n          router.push({ name: 'WeatherResults', params: { city: city.value } });\r\n        } else {\r\n          errorMessage.value = response.data.data.validateCity.message;\r\n          isPopupVisible.value = true;\r\n        }\r\n      } catch (error) {\r\n        errorMessage.value = error.response?.data?.message || 'An error occurred';\r\n        isPopupVisible.value = true;\r\n      }\r\n    };\r\n\r\n    return {\r\n      city,\r\n      validateCity,\r\n      isPopupVisible,\r\n      errorMessage,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add any additional styles for the popup if needed */\r\n</style>\r\n"],"mappings":";AAkBA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,SAAQ,QAAS,YAAY;AACtC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAIL,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMM,cAAa,GAAIN,GAAG,CAAC,KAAK,CAAC;IACjC,MAAMO,YAAW,GAAIP,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMQ,MAAK,GAAIP,SAAS,CAAC,CAAC;IAE1B,MAAMQ,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,IAAI,CAAC,+BAA+B,EAAE;UACjEC,KAAK,EAAE;;;;;;;WAON;UACDC,SAAS,EAAE;YACTR,IAAI,EAAEA,IAAI,CAACS;UACb;QACF,CAAC,CAAC;QACF,IAAIJ,QAAQ,CAACK,IAAI,CAACA,IAAI,CAACN,YAAY,CAACO,KAAK,EAAE;UACzCR,MAAM,CAACS,IAAI,CAAC;YAAEd,IAAI,EAAE,gBAAgB;YAAEe,MAAM,EAAE;cAAEb,IAAI,EAAEA,IAAI,CAACS;YAAM;UAAE,CAAC,CAAC;QACvE,OAAO;UACLP,YAAY,CAACO,KAAI,GAAIJ,QAAQ,CAACK,IAAI,CAACA,IAAI,CAACN,YAAY,CAACU,OAAO;UAC5Db,cAAc,CAACQ,KAAI,GAAI,IAAI;QAC7B;MACF,EAAE,OAAOM,KAAK,EAAE;QACdb,YAAY,CAACO,KAAI,GAAIM,KAAK,CAACV,QAAQ,EAAEK,IAAI,EAAEI,OAAM,IAAK,mBAAmB;QACzEb,cAAc,CAACQ,KAAI,GAAI,IAAI;MAC7B;IACF,CAAC;IAED,OAAO;MACLT,IAAI;MACJI,YAAY;MACZH,cAAc;MACdC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}