{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios'; // Make sure to install axios\n\nexport default {\n  name: 'HomePage',\n  setup() {\n    const city = ref('');\n    const router = useRouter();\n    const showPopup = ref(false);\n    const popupMessage = ref('');\n    const navigateToResults = async () => {\n      try {\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city.value}&appid=YOUR_API_KEY`);\n\n        // If the API call is successful, navigate to the results page\n        router.push({\n          name: 'WeatherResults',\n          params: {\n            city: city.value\n          }\n        });\n      } catch (error) {\n        // Handle the error (e.g., city not found)\n        popupMessage.value = 'Please enter a valid city name.';\n        showPopup.value = true;\n      }\n    };\n    return {\n      city,\n      navigateToResults,\n      showPopup,\n      popupMessage\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","axios","name","setup","city","router","showPopup","popupMessage","navigateToResults","response","get","value","push","params","error"],"sources":["C:\\Users\\Admin\\Documents\\weather\\weather-frontend\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen flex flex-col items-center justify-center bg-gray-100\">\r\n    <h1 class=\"text-2xl mb-4\">Weather App</h1>\r\n    <form @submit.prevent=\"navigateToResults\" class=\"flex flex-col items-center mb-8\">\r\n      <input v-model=\"city\" type=\"text\" placeholder=\"Enter city\" class=\"p-2 border rounded mb-4\" />\r\n      <button type=\"submit\" class=\"bg-blue-500 text-white p-2 rounded\">Search</button>\r\n    </form>\r\n    <div v-if=\"showPopup\" class=\"fixed inset-0 flex items-center justify-center bg-gray-500 bg-opacity-50\">\r\n      <div class=\"bg-white p-4 rounded shadow-md\">\r\n        <p>{{ popupMessage }}</p>\r\n        <button @click=\"showPopup = false\" class=\"bg-blue-500 text-white p-2 rounded\">Close</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport axios from 'axios'; // Make sure to install axios\r\n\r\nexport default {\r\n  name: 'HomePage',\r\n  setup() {\r\n    const city = ref('');\r\n    const router = useRouter();\r\n    const showPopup = ref(false);\r\n    const popupMessage = ref('');\r\n\r\n    const navigateToResults = async () => {\r\n      try {\r\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city.value}&appid=YOUR_API_KEY`);\r\n        \r\n        // If the API call is successful, navigate to the results page\r\n        router.push({ name: 'WeatherResults', params: { city: city.value } });\r\n      } catch (error) {\r\n        // Handle the error (e.g., city not found)\r\n        popupMessage.value = 'Please enter a valid city name.';\r\n        showPopup.value = true;\r\n      }\r\n    };\r\n\r\n    return {\r\n      city,\r\n      navigateToResults,\r\n      showPopup,\r\n      popupMessage,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Add any additional styles here */\r\n</style>\r\n"],"mappings":";AAiBA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,SAAQ,QAAS,YAAY;AACtC,OAAOC,KAAI,MAAO,OAAO,EAAE;;AAE3B,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAIL,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMM,MAAK,GAAIL,SAAS,CAAC,CAAC;IAC1B,MAAMM,SAAQ,GAAIP,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMQ,YAAW,GAAIR,GAAG,CAAC,EAAE,CAAC;IAE5B,MAAMS,iBAAgB,GAAI,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAAC,qDAAqDN,IAAI,CAACO,KAAK,qBAAqB,CAAC;;QAEtH;QACAN,MAAM,CAACO,IAAI,CAAC;UAAEV,IAAI,EAAE,gBAAgB;UAAEW,MAAM,EAAE;YAAET,IAAI,EAAEA,IAAI,CAACO;UAAM;QAAE,CAAC,CAAC;MACvE,EAAE,OAAOG,KAAK,EAAE;QACd;QACAP,YAAY,CAACI,KAAI,GAAI,iCAAiC;QACtDL,SAAS,CAACK,KAAI,GAAI,IAAI;MACxB;IACF,CAAC;IAED,OAAO;MACLP,IAAI;MACJI,iBAAiB;MACjBF,SAAS;MACTC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}