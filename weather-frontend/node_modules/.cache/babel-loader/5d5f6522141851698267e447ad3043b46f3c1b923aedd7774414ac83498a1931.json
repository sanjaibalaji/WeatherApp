{"ast":null,"code":"import gql from 'graphql-tag';\nimport { useQuery } from '@vue/apollo-composable';\nexport default {\n  name: 'HourlyForecast',\n  data() {\n    return {\n      hourlyForecast: []\n    };\n  },\n  setup() {\n    const city = 'Los Angeles';\n    const {\n      result\n    } = useQuery(gql`\n        query($city: String!) {\n          getWeather(city: $city) {\n            hourly {\n              dt\n              temp\n              icon\n            }\n          }\n        }\n      `, {\n      city\n    });\n    return {\n      hourlyForecast: result.hourly\n    };\n  }\n};","map":{"version":3,"names":["gql","useQuery","name","data","hourlyForecast","setup","city","result","hourly"],"sources":["C:\\Users\\Admin\\task\\weather-frontend\\src\\components\\HourlyForecast.vue"],"sourcesContent":["<template>\r\n    <div class=\"mt-4\">\r\n      <div class=\"text-sm text-gray-600 flex justify-between\">\r\n        <div>Now</div>\r\n        <div v-for=\"hour in hourlyForecast\" :key=\"hour.dt\">\r\n          {{ new Date(hour.dt * 1000).getHours() }}:00\r\n        </div>\r\n      </div>\r\n      <div class=\"text-lg font-bold flex justify-between\">\r\n        <div v-for=\"hour in hourlyForecast\" :key=\"hour.dt\">\r\n          <img :src=\"`http://openweathermap.org/img/wn/${hour.icon}@2x.png`\" alt=\"Weather Icon\" class=\"w-8 h-8\" />\r\n          <div>{{ hour.temp }}Â°C</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import gql from 'graphql-tag';\r\n  import { useQuery } from '@vue/apollo-composable';\r\n  \r\n  export default {\r\n    name: 'HourlyForecast',\r\n    data() {\r\n      return {\r\n        hourlyForecast: [],\r\n      };\r\n    },\r\n    setup() {\r\n      const city = 'Los Angeles';\r\n      const { result } = useQuery(gql`\r\n        query($city: String!) {\r\n          getWeather(city: $city) {\r\n            hourly {\r\n              dt\r\n              temp\r\n              icon\r\n            }\r\n          }\r\n        }\r\n      `, { city });\r\n      return {\r\n        hourlyForecast: result.hourly,\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":"AAkBE,OAAOA,GAAE,MAAO,aAAa;AAC7B,SAASC,QAAO,QAAS,wBAAwB;AAEjD,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAI,aAAa;IAC1B,MAAM;MAAEC;IAAO,IAAIN,QAAQ,CAACD,GAAG;;;;;;;;;;OAU9B,EAAE;MAAEM;IAAK,CAAC,CAAC;IACZ,OAAO;MACLF,cAAc,EAAEG,MAAM,CAACC;IACzB,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}