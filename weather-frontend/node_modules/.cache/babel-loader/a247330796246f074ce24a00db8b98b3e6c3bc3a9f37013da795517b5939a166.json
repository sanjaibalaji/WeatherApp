{"ast":null,"code":"import { ref } from 'vue';\nimport gql from 'graphql-tag';\n// import { useQuery } from '@vue/apollo-composable';\nimport WeatherCard from './components/WeatherCard.vue';\nimport HourlyForecast from './components/HourlyForecast.vue';\nimport HistoricalWeatherTable from './components/HistoricalWeatherTable.vue';\nexport default {\n  components: {\n    WeatherCard,\n    HourlyForecast,\n    HistoricalWeatherTable\n  },\n  setup() {\n    const city = ref('');\n    const weather = ref(null);\n    const hourlyForecast = ref([]);\n    const getWeather = async () => {\n      try {\n        const response = await this.$apollo.query({\n          query: gql`\n            query($city: String!) {\n              getWeather(city: $city) {\n                description\n                temperature\n                feels_like\n                sunset\n                icon\n                hourly {\n                  dt\n                  temp\n                  icon\n                }\n              }\n            }\n          `,\n          variables: {\n            city: city.value\n          }\n        });\n        weather.value = response.data.getWeather;\n        hourlyForecast.value = response.data.getWeather.hourly;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    return {\n      city,\n      weather,\n      hourlyForecast,\n      getWeather\n    };\n  }\n};","map":{"version":3,"names":["ref","gql","WeatherCard","HourlyForecast","HistoricalWeatherTable","components","setup","city","weather","hourlyForecast","getWeather","response","$apollo","query","variables","value","data","hourly","error","console"],"sources":["C:\\Users\\Admin\\task\\weather-frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen flex flex-col items-center bg-gray-100\">\n    <form @submit.prevent=\"getWeather\" class=\"flex flex-col items-center mb-8\">\n      <input v-model=\"city\" type=\"text\" placeholder=\"Enter city\" class=\"p-2 border rounded mb-4\" />\n      <button type=\"submit\" class=\"bg-blue-500 text-white p-2 rounded\">Search</button>\n    </form>\n    <WeatherCard :weather=\"weather\" :city=\"city\" />\n    <HourlyForecast :hourlyForecast=\"hourlyForecast\" />\n    <HistoricalWeatherTable />\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport gql from 'graphql-tag';\n// import { useQuery } from '@vue/apollo-composable';\nimport WeatherCard from './components/WeatherCard.vue';\nimport HourlyForecast from './components/HourlyForecast.vue';\nimport HistoricalWeatherTable from './components/HistoricalWeatherTable.vue';\n\nexport default {\n  components: {\n    WeatherCard,\n    HourlyForecast,\n    HistoricalWeatherTable,\n  },\n  setup() {\n    const city = ref('');\n    const weather = ref(null);\n    const hourlyForecast = ref([]);\n\n    const getWeather = async () => {\n      try {\n        const response = await this.$apollo.query({\n          query: gql`\n            query($city: String!) {\n              getWeather(city: $city) {\n                description\n                temperature\n                feels_like\n                sunset\n                icon\n                hourly {\n                  dt\n                  temp\n                  icon\n                }\n              }\n            }\n          `,\n          variables: { city: city.value },\n        });\n        weather.value = response.data.getWeather;\n        hourlyForecast.value = response.data.getWeather.hourly;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    return {\n      city,\n      weather,\n      hourlyForecast,\n      getWeather,\n    };\n  },\n};\n</script>\n"],"mappings":"AAaA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,GAAE,MAAO,aAAa;AAC7B;AACA,OAAOC,WAAU,MAAO,8BAA8B;AACtD,OAAOC,cAAa,MAAO,iCAAiC;AAC5D,OAAOC,sBAAqB,MAAO,yCAAyC;AAE5E,eAAe;EACbC,UAAU,EAAE;IACVH,WAAW;IACXC,cAAc;IACdC;EACF,CAAC;EACDE,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAIP,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMQ,OAAM,GAAIR,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMS,cAAa,GAAIT,GAAG,CAAC,EAAE,CAAC;IAE9B,MAAMU,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAM,IAAI,CAACC,OAAO,CAACC,KAAK,CAAC;UACxCA,KAAK,EAAEZ,GAAG;;;;;;;;;;;;;;;WAeT;UACDa,SAAS,EAAE;YAAEP,IAAI,EAAEA,IAAI,CAACQ;UAAM;QAChC,CAAC,CAAC;QACFP,OAAO,CAACO,KAAI,GAAIJ,QAAQ,CAACK,IAAI,CAACN,UAAU;QACxCD,cAAc,CAACM,KAAI,GAAIJ,QAAQ,CAACK,IAAI,CAACN,UAAU,CAACO,MAAM;MACxD,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAED,OAAO;MACLX,IAAI;MACJC,OAAO;MACPC,cAAc;MACdC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}