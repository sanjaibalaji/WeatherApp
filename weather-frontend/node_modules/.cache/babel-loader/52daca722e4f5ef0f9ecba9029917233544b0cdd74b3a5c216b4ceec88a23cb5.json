{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withModifiers as _withModifiers, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen flex flex-col items-center bg-gray-100\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_WeatherCard = _resolveComponent(\"WeatherCard\");\n  const _component_HourlyForecast = _resolveComponent(\"HourlyForecast\");\n  const _component_HistoricalWeatherTable = _resolveComponent(\"HistoricalWeatherTable\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $setup.getWeather && $setup.getWeather(...args), [\"prevent\"])),\n    class: \"flex flex-col items-center mb-8\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.city = $event),\n    type: \"text\",\n    placeholder: \"Enter city\",\n    class: \"p-2 border rounded mb-4\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.city]]), _cache[2] || (_cache[2] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"bg-blue-500 text-white p-2 rounded\"\n  }, \"Search\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createVNode(_component_WeatherCard, {\n    weather: $setup.weather,\n    city: $setup.city\n  }, null, 8 /* PROPS */, [\"weather\", \"city\"]), _createVNode(_component_HourlyForecast, {\n    hourlyForecast: $setup.hourlyForecast\n  }, null, 8 /* PROPS */, [\"hourlyForecast\"]), _createVNode(_component_HistoricalWeatherTable)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$setup","getWeather","$event","city","type","placeholder","_createVNode","_component_WeatherCard","weather","_component_HourlyForecast","hourlyForecast","_component_HistoricalWeatherTable"],"sources":["C:\\Users\\Admin\\task\\weather-frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen flex flex-col items-center bg-gray-100\">\n    <form @submit.prevent=\"getWeather\" class=\"flex flex-col items-center mb-8\">\n      <input v-model=\"city\" type=\"text\" placeholder=\"Enter city\" class=\"p-2 border rounded mb-4\" />\n      <button type=\"submit\" class=\"bg-blue-500 text-white p-2 rounded\">Search</button>\n    </form>\n    <WeatherCard :weather=\"weather\" :city=\"city\" />\n    <HourlyForecast :hourlyForecast=\"hourlyForecast\" />\n    <HistoricalWeatherTable />\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport gql from 'graphql-tag';\nimport WeatherCard from './components/WeatherCard.vue';\nimport HourlyForecast from './components/HourlyForecast.vue';\nimport HistoricalWeatherTable from './components/HistoricalWeatherTable.vue';\n\nexport default {\n  components: {\n    WeatherCard,\n    HourlyForecast,\n    HistoricalWeatherTable,\n  },\n  setup() {\n    const city = ref('');\n    const weather = ref(null);\n    const hourlyForecast = ref([]);\n\n    const getWeather = async () => {\n      const response = await this.$apollo.query({\n        query: gql`\n          query($city: String!) {\n            getWeather(city: $city) {\n              description\n              temperature\n              feels_like\n              sunset\n              icon\n              hourly {\n                dt\n                temp\n                icon\n              }\n            }\n          }\n        `,\n        variables: { city: city.value },\n      });\n      weather.value = response.data.getWeather;\n      hourlyForecast.value = response.data.getWeather.hourly;\n    };\n\n    return {\n      city,\n      weather,\n      hourlyForecast,\n      getWeather,\n    };\n  },\n};\n</script>\n\n<style scoped>\n/* Add any scoped styles here */\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAqD;;;;;uBAAhEC,mBAAA,CAQM,OARNC,UAQM,GAPJC,mBAAA,CAGO;IAHAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAFjBC,cAAA,KAAAC,IAAA,KAE2BC,MAAA,CAAAC,UAAA,IAAAD,MAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAEP,KAAK,EAAC;sBACvCG,mBAAA,CAA6F;IAHnG,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAGsBF,MAAA,CAAAG,IAAI,GAAAD,MAAA;IAAEE,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,YAAY;IAACb,KAAK,EAAC;iDAAjDQ,MAAA,CAAAG,IAAI,E,6BACpBR,mBAAA,CAAgF;IAAxES,IAAI,EAAC,QAAQ;IAACZ,KAAK,EAAC;KAAqC,QAAM,qB,4BAEzEc,YAAA,CAA+CC,sBAAA;IAAjCC,OAAO,EAAER,MAAA,CAAAQ,OAAO;IAAGL,IAAI,EAAEH,MAAA,CAAAG;gDACvCG,YAAA,CAAmDG,yBAAA;IAAlCC,cAAc,EAAEV,MAAA,CAAAU;EAAc,6CAC/CJ,YAAA,CAA0BK,iCAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}