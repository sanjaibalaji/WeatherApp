{"ast":null,"code":"import { ref, watchEffect } from 'vue';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@vue/apollo-composable';\nimport HourlyForecast from '../components/HourlyForecast.vue';\nexport default {\n  props: ['city'],\n  components: {\n    HourlyForecast\n  },\n  setup(props) {\n    const weather = ref(null);\n    const hourlyForecast = ref([]);\n    const {\n      result,\n      loading,\n      error\n    } = useQuery(gql`\n        query($city: String!) {\n          getWeather(city: $city) {\n            description\n            temperature\n            feels_like\n            sunset\n            icon\n            hourly {\n              dt\n              temp\n              icon\n            }\n          }\n        }\n      `, {\n      city: props.city\n    });\n    watchEffect(() => {\n      if (!loading.value && result.value) {\n        weather.value = result.value.getWeather;\n        hourlyForecast.value = result.value.getWeather.hourly;\n      }\n    });\n    return {\n      weather,\n      hourlyForecast,\n      loading,\n      error\n    };\n  }\n};","map":{"version":3,"names":["ref","watchEffect","gql","useQuery","HourlyForecast","props","components","setup","weather","hourlyForecast","result","loading","error","city","value","getWeather","hourly"],"sources":["C:\\Users\\Admin\\Documents\\weather\\weather-frontend\\src\\views\\WeatherResults.vue"],"sourcesContent":[" <template>\r\n  <div class=\"min-h-screen w-full flex items-center justify-center bg-weather bg-cover bg-center bg-fixed\">\r\n    <div class=\"p-8 rounded-lg shadow-lg w-full max-w-4xl bg-cover bg-center bg-fixed\">\r\n      <div class=\"flex flex-col md:flex-row items-stretch justify-between p-6 bg-opacity-70 backdrop-blur-sm rounded-lg h-full\">\r\n       \r\n        <div class=\"flex flex-col items-center md:items-start text-center md:text-left w-full md:w-1/2 p-4\">\r\n          <div v-if=\"weather\" class=\"text-center md:text-center p-4 bg-white bg-opacity-30 backdrop-blur-sm rounded-lg w-full h-full flex flex-col justify-between\">\r\n            <div class=\"flex justify-between items-center w-full\">\r\n            </div>\r\n            <img :src=\"`http://openweathermap.org/img/wn/${weather.icon}@2x.png`\" alt=\"Weather Icon\" class=\"w-24 h-24 mx-auto my-2\" />\r\n            <div class=\"text-6xl font-bold text-black\">{{ weather.temperature }}°C</div>\r\n            <div class=\"text-xl text-black\">{{ weather.description }}</div>\r\n            <div class=\"text-lg text-black\">{{ city }}</div>\r\n            <div class=\"text-sm text-black\">{{ new Date().toLocaleDateString() }}</div>\r\n            <div class=\"text-sm text-black\">Feels like {{ weather.feels_like.toFixed(1) }}°C</div>\r\n            <div class=\"text-sm text-black\">Sunset {{ new Date(weather.sunset * 1000).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}) }}</div>\r\n          </div>\r\n        </div>\r\n    \r\n        <div class=\"flex flex-col justify-between w-full md:w-1/2 h-full\">\r\n        \r\n          <div class=\"bg-white bg-opacity-70 backdrop-blur-sm p-4 rounded-lg mb-4 h-1/2\">\r\n            <HourlyForecast :hourlyForecast=\"hourlyForecast\" />\r\n          </div>\r\n          \r\n          <div class=\"text-center p-4 text-black bg-white bg-opacity-30 backdrop-blur-sm rounded-lg h-1/2\">\r\n            Improve him believe opinion offered met and end cheered forbade. Friendly as stranger speedy by recurred. Son interest wandered sir addition end say. Manners beloved affixed picture men ask.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watchEffect } from 'vue';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@vue/apollo-composable';\r\nimport HourlyForecast from '../components/HourlyForecast.vue';\r\n\r\nexport default {\r\n  props: ['city'],\r\n  components: {\r\n    HourlyForecast,\r\n  },\r\n  setup(props) {\r\n    const weather = ref(null);\r\n    const hourlyForecast = ref([]);\r\n\r\n    const { result, loading, error } = useQuery(\r\n      gql`\r\n        query($city: String!) {\r\n          getWeather(city: $city) {\r\n            description\r\n            temperature\r\n            feels_like\r\n            sunset\r\n            icon\r\n            hourly {\r\n              dt\r\n              temp\r\n              icon\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      { city: props.city }\r\n    );\r\n\r\n    watchEffect(() => {\r\n      if (!loading.value && result.value) {\r\n        weather.value = result.value.getWeather;\r\n        hourlyForecast.value = result.value.getWeather.hourly;\r\n      }\r\n    });\r\n\r\n    return {\r\n      weather,\r\n      hourlyForecast,\r\n      loading,\r\n      error,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n"],"mappings":"AAmCA,SAASA,GAAG,EAAEC,WAAU,QAAS,KAAK;AACtC,OAAOC,GAAE,MAAO,aAAa;AAC7B,SAASC,QAAO,QAAS,wBAAwB;AACjD,OAAOC,cAAa,MAAO,kCAAkC;AAE7D,eAAe;EACbC,KAAK,EAAE,CAAC,MAAM,CAAC;EACfC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,KAAKA,CAACF,KAAK,EAAE;IACX,MAAMG,OAAM,GAAIR,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMS,cAAa,GAAIT,GAAG,CAAC,EAAE,CAAC;IAE9B,MAAM;MAAEU,MAAM;MAAEC,OAAO;MAAEC;IAAM,IAAIT,QAAQ,CACzCD,GAAG;;;;;;;;;;;;;;;OAeF,EACD;MAAEW,IAAI,EAAER,KAAK,CAACQ;IAAK,CACrB,CAAC;IAEDZ,WAAW,CAAC,MAAM;MAChB,IAAI,CAACU,OAAO,CAACG,KAAI,IAAKJ,MAAM,CAACI,KAAK,EAAE;QAClCN,OAAO,CAACM,KAAI,GAAIJ,MAAM,CAACI,KAAK,CAACC,UAAU;QACvCN,cAAc,CAACK,KAAI,GAAIJ,MAAM,CAACI,KAAK,CAACC,UAAU,CAACC,MAAM;MACvD;IACF,CAAC,CAAC;IAEF,OAAO;MACLR,OAAO;MACPC,cAAc;MACdE,OAAO;MACPC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}