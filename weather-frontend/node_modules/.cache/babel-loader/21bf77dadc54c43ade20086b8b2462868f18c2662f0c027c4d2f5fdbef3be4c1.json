{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen flex flex-col items-center justify-center bg-gray-100\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"fixed inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50\"\n};\nconst _hoisted_3 = {\n  class: \"bg-white p-6 rounded-lg shadow-lg max-w-sm text-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"h1\", {\n    class: \"text-2xl mb-4\"\n  }, \"Weather App\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $setup.validateCity && $setup.validateCity(...args), [\"prevent\"])),\n    class: \"flex flex-col items-center mb-8\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.city = $event),\n    type: \"text\",\n    placeholder: \"Enter city\",\n    class: \"p-2 border rounded mb-4\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.city]]), _cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"bg-blue-500 text-white p-2 rounded\"\n  }, \"Search\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createCommentVNode(\" Modal Popup for Invalid City \"), $setup.isPopupVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"p\", {\n    class: \"text-lg mb-4\"\n  }, \"Please enter a valid city name\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $setup.isPopupVisible = false),\n    class: \"bg-blue-500 text-white p-2 rounded\"\n  }, \" Close \")])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$setup","validateCity","$event","city","type","placeholder","_createCommentVNode","isPopupVisible","_hoisted_2","_hoisted_3","onClick"],"sources":["C:\\Users\\Admin\\Documents\\weather\\weather-frontend\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen flex flex-col items-center justify-center bg-gray-100\">\r\n    <h1 class=\"text-2xl mb-4\">Weather App</h1>\r\n    <form @submit.prevent=\"validateCity\" class=\"flex flex-col items-center mb-8\">\r\n      <input\r\n        v-model=\"city\"\r\n        type=\"text\"\r\n        placeholder=\"Enter city\"\r\n        class=\"p-2 border rounded mb-4\"\r\n      />\r\n      <button type=\"submit\" class=\"bg-blue-500 text-white p-2 rounded\">Search</button>\r\n    </form>\r\n\r\n     <!-- Modal Popup for Invalid City -->\r\n    <div v-if=\"isPopupVisible\" class=\"fixed inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50\">\r\n      <div class=\"bg-white p-6 rounded-lg shadow-lg max-w-sm text-center\">\r\n        <p class=\"text-lg mb-4\">Please enter a valid city name</p>\r\n        <button @click=\"isPopupVisible = false\" class=\"bg-blue-500 text-white p-2 rounded\">\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  \r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  name: 'HomePage',\r\n  setup() {\r\n    const city = ref('');\r\n    const router = useRouter();\r\n      const isPopupVisible = ref(false);\r\n\r\n    // List of valid cities\r\n    const validCities = [\r\n      'New York', 'coimbatore', 'Surandai', 'Tenkasi', 'Tirunelveli'\r\n    ];\r\n\r\n    const validateCity = () => {\r\n      // Check if city name is in the list\r\n      if (!validCities.includes(city.value.trim())) {\r\n          isPopupVisible.value = true; \r\n      } else {\r\n        // Navigate to results if the city is valid\r\n        router.push({ name: 'WeatherResults', params: { city: city.value } });\r\n      }\r\n    };\r\n\r\n    return {\r\n      city,\r\n      validateCity,\r\n        isPopupVisible,\r\n    };\r\n  },\r\n};\r\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAoE;;EADjFC,GAAA;EAc+BD,KAAK,EAAC;;;EAC1BA,KAAK,EAAC;AAAwD;;uBAdvEE,mBAAA,CAuBM,OAvBNC,UAuBM,G,0BAtBJC,mBAAA,CAA0C;IAAtCJ,KAAK,EAAC;EAAe,GAAC,aAAW,sBACrCI,mBAAA,CAQO;IARAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IAAER,KAAK,EAAC;sBACzCI,mBAAA,CAKE;IATR,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAKiBF,MAAA,CAAAG,IAAI,GAAAD,MAAA;IACbE,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,YAAY;IACxBd,KAAK,EAAC;iDAHGS,MAAA,CAAAG,IAAI,E,6BAKfR,mBAAA,CAAgF;IAAxES,IAAI,EAAC,QAAQ;IAACb,KAAK,EAAC;KAAqC,QAAM,qB,4BAGxEe,mBAAA,kCAAqC,EAC3BN,MAAA,CAAAO,cAAc,I,cAAzBd,mBAAA,CAOM,OAPNe,UAOM,GANJb,mBAAA,CAKM,OALNc,UAKM,G,0BAJJd,mBAAA,CAA0D;IAAvDJ,KAAK,EAAC;EAAc,GAAC,gCAA8B,sBACtDI,mBAAA,CAES;IAFAe,OAAK,EAAAb,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAAEF,MAAA,CAAAO,cAAc;IAAUhB,KAAK,EAAC;KAAqC,SAEnF,E,OAnBRe,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}